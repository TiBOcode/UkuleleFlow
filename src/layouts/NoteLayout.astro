---
import Layout from './Layout.astro';
import { getCollection } from 'astro:content';
interface Props {
  title: string;
  date: Date;
  updated?: Date;
  tags: string[];
  related: string[];
}

const { title, date, updated, tags, related } = Astro.props;
const allNotes = await getCollection('notes');
const relatedNotes = allNotes.filter(note => 
  related.includes(note.slug.replace(/^.*[\\\/]/, ''))
);

const formatDate = (date: Date) => {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};
---

<Layout title={`${title} | TiBO's Notes`}>
  <article class="note">
    <header>
    
      <h1>{title}</h1>
      <div class="metadata">
        <time datetime={date.toISOString()}>{formatDate(date)}</time>
        {updated && (
          <span class="updated">
            Updated: <time datetime={updated.toISOString()}>{formatDate(updated)}</time>
          </span>
        )}
      </div>
      {tags.length > 0 && (
        <div class="tags">
          {tags.map(tag => <span class="tag">#{tag}</span>)}
        </div>
      )}
    </header>

    <div class="content">
      <slot />
    </div>

    {relatedNotes.length > 0 && (
      <footer>
        <h2>Related Notes</h2>
        <div class="related-notes">
          {relatedNotes.map(note => (
            <a href={`/notes/${note.slug}`} class="related-note">
              {note.data.title}
            </a>
          ))}
        </div>
      </footer>
    )}
  </article>
</Layout>

<style>
  .note {
    max-width: var(--content-width);
    margin: 0 auto;
    padding: 2rem var(--container-padding);
  }

  header {
    margin-bottom: 2rem;
  }

  h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    background: var(--orange-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .metadata {
    color: var(--text-secondary);
    font-size: 0.9rem;
    margin-bottom: 1rem;
  }

  .updated {
    margin-left: 1rem;
  }

  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .tag {
    background: rgba(255, 255, 255, 0.05);
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    font-size: 0.85rem;
    color: var(--text-secondary);
  }

  .content {
    font-size: 1.1rem;
    line-height: 1.8;
  }

  footer {
    margin-top: 4rem;
    padding-top: 2rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
  }

  h2 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
  }

  .related-notes {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .related-note {
    background: rgba(255, 255, 255, 0.03);
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    text-decoration: none;
    color: var(--text-secondary);
    transition: all 0.2s ease;
  }

  .related-note:hover {
    background: rgba(255, 255, 255, 0.05);
    color: var(--text-primary);
    transform: translateY(-2px);
  }
</style>